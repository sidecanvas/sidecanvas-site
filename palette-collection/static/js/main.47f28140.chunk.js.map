{"version":3,"sources":["scenes/Palette/scenes/Header.jsx","components/ColorRectangle.jsx","components/Button.jsx","scenes/Palette/components/ColorSelector.jsx","scenes/Palette/scenes/Colors.jsx","scenes/Palette/scenes/AddBox.jsx","scenes/Palette/services/StoreLocal.js","scenes/Palette/services/RequestHTTP.js","scenes/Palette/index.jsx","scenes/PaletteCollection/scenes/Palettes.jsx","services/SaveItemOrder.js","scenes/PaletteCollection/scenes/AddBox.jsx","scenes/PaletteCollection/services/StoreLocal.js","scenes/PaletteCollection/services/RequestHTTP.js","scenes/PaletteCollection/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","onSave","info","title","description","className","style","marginBottom","to","margin","padding","whiteSpace","fontWeight","name","defaultValue","placeholder","onBlur","ColorRectangle","color","backgroundColor","Button","width","text","icon","onClick","defaultProps","ColorSelector","id","hex","onUpdate","setActiveColorSelector","useResizeDetector","parentWidth","parentDiv","ref","useEffect","document","querySelector","display","useColor","selectedColor","setSelectedColor","isNaN","height","onChange","Colors","colors","activeColorSelector","onDelete","onClone","handleOnDragEnd","onDragEnd","droppableId","provided","droppableProps","innerRef","map","index","draggableId","draggableProps","dragHandleProps","AddBox","saveColor","fetchColors","paletteId","a","JSON","parse","localStorage","getItem","data","patchColors","JSONColors","sort_order","setItem","stringify","url","fetch","res","json","method","headers","body","Palette","databaseEnabled","fetchColorsLocal","patchColorsLocal","fetchColorsHTTP","patchColorsHTTP","useState","setInfo","setColors","fetchedId","fetchedTitle","fetchedDescription","fetchedColors","UUID","getColors","deleteColor","newColors","filter","addColor","newColor","order","e","target","value","newInfo","length","originalId","originalIndex","findIndex","slice","result","destination","items","Array","from","splice","source","reorderedItem","Palettes","palettes","palette","marginTop","SaveItemOrder","updatedIndex","leftOrder","rightOrder","numerator","denominator","gcd","b","reduce","newPaletteId","onCreate","fetchPalettes","Object","keys","forEach","key","push","putPalette","newPalette","deletePalette","removeItem","patchPalette","updatedPalette","withRouter","history","fetchPalettesLocal","putPaletteLocal","deletePaletteLocal","patchPaletteLocal","fetchPalettesHTTP","putPaletteHTTP","deletePaletteHTTP","patchPaletteHTTP","setPalettes","paletteData","sort","getPalettes","onCreateNewPalette","newPalettes","saveItemOrder","onDeletePalette","paletteToDelete","find","console","log","cloneId","cloneTitle","cloneDescription","cloneColors","App","path","exact","children","Child","useParams","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47f28140.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = ({ onSave, info={ title: \"\" , description: \"\" }}) => {\r\n\r\n    return (\r\n        <header className=\"palette-collection-header\">\r\n            <div style={{ marginBottom: \"1rem\" }}>\r\n                <div className=\"icon clickable-icon\" >\r\n                    <Link to=\"/palette-collection\">\r\n                        <div className=\"link-button\">\r\n                            <FaArrowLeft/> <div style={{ margin: \"auto\", padding: \"0rem 0.5rem\", whiteSpace:\"nowrap\", fontWeight:\"bold\" }}>Color Palettes</div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <h2><input name=\"title-info\" defaultValue={info.title} placeholder=\"Color palette name\" onBlur={onSave}/></h2>\r\n            <h3><input name=\"description-info\" defaultValue={info.description} placeholder=\"Color palette description\" onBlur={onSave}/></h3>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst ColorRectangle = ({ color }) => {\r\n\r\n    return (\r\n        \r\n        <div className=\"color-box\" \r\n        style={{backgroundColor: color}}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorRectangle\r\n","function Button({width, color, text=null, icon=null, onClick}) {\r\n\r\n    return (\r\n        <button className=\"btn\" onClick={onClick}\r\n        style={{ backgroundColor: color, width: width }}>\r\n            {icon !== null && icon}\r\n            <br></br>\r\n            {text !== null && text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: \"gray\"\r\n}\r\n\r\nexport default Button\r\n","import ColorPicker, { useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport Button from \"../../../components/Button\"\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { useEffect } from 'react'\r\nimport ColorRectangle from '../../../components/ColorRectangle'\r\nimport { FaSave, FaTimes } from 'react-icons/fa'\r\n\r\n\r\nfunction ColorSelector({ color={ id: \"add\", hex:\"#999999\" }, onSave=null, onUpdate=null, setActiveColorSelector=null }) {\r\n\r\n  const { width : parentWidth, ref : parentDiv } = useResizeDetector();\r\n  //const [colorPickerWidth, setColorPickerWidth] = useState(null);\r\n  //const parentRef = useRef(null);\r\n  \r\n  useEffect( () => {\r\n    document.querySelector(\".rcp\").style.display = \"block\";\r\n  });\r\n\r\n  const [selectedColor, setSelectedColor] = useColor(\"hex\", color.hex);\r\n\r\n  return (\r\n          <div>\r\n            <ColorRectangle color={selectedColor.hex} />\r\n              <h4>Color Selector</h4>\r\n              <div className=\"color-picker\" ref={parentDiv}>\r\n                <ColorPicker width={isNaN(parentWidth) ? 0 : parentWidth} height={125} color={selectedColor} onChange={setSelectedColor} />\r\n              </div>\r\n            {(onSave !== null) && \r\n              <div className=\"wide-btn\">\r\n                <Button width=\"100%\" color=\"#1a8917\" icon={<FaSave className=\"button-icon-btn btn-icon\" />} onClick={() => {onSave(selectedColor)}} />\r\n              </div>\r\n            }\r\n            \r\n            {(onUpdate !== null && setActiveColorSelector !== null) && \r\n              <div className=\"wide-btn\">\r\n                <Button width=\"50%\" color=\"#1a8917\" icon={<FaSave className=\"button-icon-btn btn-icon\" />} text=\"SAVE COLOR\" onClick={() => {onUpdate(color.id, selectedColor)}} />\r\n                <Button width=\"50%\" color=\"#888888\" icon={<FaTimes className=\"button-icon-btn btn-icon\" />} text=\"CANCEL\" onClick={() => {setActiveColorSelector(null)}} />\r\n              </div>\r\n            }\r\n          </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ColorSelector\r\n","import ColorRectangle from '../../../components/ColorRectangle'\r\nimport { FaTrash, FaPen, FaClone, FaGripLines } from 'react-icons/fa'\r\nimport ColorSelector from '../components/ColorSelector'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction Colors({ colors, activeColorSelector, setActiveColorSelector, onDelete, onUpdate, onClone, handleOnDragEnd }) {\r\n\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}> \r\n            <Droppable droppableId=\"color-list\">\r\n                {(provided) => (\r\n                    <div className=\"color-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {colors.map((color, index) => (\r\n                            <Draggable key={color.id} draggableId={color.id} index={index} >\r\n                                {(provided) => (\r\n                                    <div className=\"draggable\" ref={provided.innerRef} {...provided.draggableProps} >\r\n                                        <div className=\"box-wrapper card\" >\r\n                                            <div className=\"color-header\">\r\n                                                <div className=\"color-box-icons left-icons\" > \r\n                                                    <div className=\"small-icon-btn icon\" {...provided.dragHandleProps}>         \r\n                                                        <FaGripLines />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"color-box-icons right-icons\">          \r\n                                                    <FaPen className=\"small-icon-btn icon clickable-icon\" onClick={() => {setActiveColorSelector(activeColorSelector === color.id ? null : color.id)}}/>\r\n                                                    <FaClone className=\"small-icon-btn icon clickable-icon\" onClick={() => {onClone(color.id)}}/>\r\n                                                    <FaTrash className=\"small-icon-btn icon clickable-icon delete-icon\" onClick={() => {onDelete(color.id)}}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"color-box-wrapper\">\r\n                                                {activeColorSelector === color.id ? \r\n                                                    <ColorSelector color={color} onUpdate={onUpdate} setActiveColorSelector={setActiveColorSelector} /> :\r\n                                                    <ColorRectangle color={color.hex} />}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default Colors\r\n","import ColorSelector from '../components/ColorSelector'\r\nimport { FaPlus, FaTimes } from 'react-icons/fa'\r\n\r\nconst AddBox = ({ activeColorSelector, setActiveColorSelector, saveColor }) => {\r\n    return (\r\n        <div className=\"add-box\">\r\n            \r\n            <div className=\"color-box-wrapper card\">\r\n                <div className=\"color-header\">\r\n                    <div className=\"color-box-icons left-icons\">          \r\n                    </div>\r\n                    <div className=\"color-box-icons right-icons\">\r\n                        {activeColorSelector === \"add\" ?\r\n                        <FaTimes className=\"small-icon-btn icon clickable-icon\" onClick={() => {setActiveColorSelector(null)}} /> :\r\n                        <FaPlus className=\"small-icon-btn icon clickable-icon\" onClick={() => {setActiveColorSelector(\"add\")}} /> }\r\n                    </div>\r\n                </div>\r\n                {activeColorSelector === \"add\" && \r\n                <div className=\"color-box-wrapper\" >\r\n                    <ColorSelector onSave={saveColor} setActiveColorSelector={setActiveColorSelector} /> \r\n                </div>}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBox\r\n","const fetchColors = async (paletteId) => {\r\n    const data = await JSON.parse(localStorage.getItem(paletteId))\r\n    return data\r\n}\r\n\r\nconst patchColors = async ({ id, title, description }, colors) => {\r\n    let JSONColors = {}\r\n    JSONColors.id = id\r\n    JSONColors.title = title\r\n    JSONColors.description = description\r\n    JSONColors.sort_order = await JSON.parse(localStorage.getItem(id)).sort_order\r\n    JSONColors.colors = colors.map((color) => (color.hex))\r\n\r\n    localStorage.setItem(id, JSON.stringify(JSONColors))\r\n}\r\n\r\nexport { fetchColors, patchColors }","\r\n\r\nconst url = `http://localhost:5000/palettes`\r\n\r\nconst fetchColors = async (paletteId) => {\r\n    const res = await fetch(`${url}/${paletteId}`)\r\n    const data = await res.json()\r\n    return data\r\n\r\n}\r\n\r\nconst patchColors = ({ id, title, description }, colors) => {\r\n    let JSONColors = {}\r\n    JSONColors.id = id\r\n    JSONColors.title = title\r\n    JSONColors.description = description\r\n    JSONColors.colors = colors.map((color) => (color.hex))\r\n\r\n    fetch(`${url}/${id}`, {\r\n    method: \"PATCH\", \r\n    headers: {\r\n        'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(JSONColors)\r\n    })\r\n}\r\n\r\nexport { fetchColors, patchColors }","import Header from './scenes/Header'\r\nimport Colors from './scenes/Colors'\r\nimport AddBox from './scenes/AddBox'\r\nimport { useState, useEffect } from 'react'\r\nimport { v4 as UUID } from 'uuid'\r\nimport { fetchColors as fetchColorsLocal, patchColors as patchColorsLocal } from './services/StoreLocal'\r\nimport { fetchColors as fetchColorsHTTP, patchColors as patchColorsHTTP } from './services/RequestHTTP'\r\n\r\n\r\nconst Palette = ({ databaseEnabled, paletteId }) => {\r\n      \r\n  let fetchColors = fetchColorsLocal\r\n  let patchColors = patchColorsLocal\r\n\r\n  if (databaseEnabled) { \r\n    fetchColors = fetchColorsHTTP\r\n    patchColors = patchColorsHTTP\r\n  } \r\n    \r\n  const [info, setInfo] = useState({ id:\"\", title: \"\", description: \"\" })\r\n  const [activeColorSelector, setActiveColorSelector] = useState(null) // \"add\" for add or id\r\n  const [colors, setColors] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getColors = async () => {\r\n      let { id:fetchedId, title:fetchedTitle, description:fetchedDescription, colors:fetchedColors } = await fetchColors(paletteId)\r\n      const fetchedInfo = { id: fetchedId, title: fetchedTitle, description: fetchedDescription }\r\n      \r\n      setInfo(fetchedInfo)\r\n      \r\n      setColors(fetchedColors.map((color) => ({ id: UUID(), hex: color }))) // Assign temp id for drag and drop\r\n    }\r\n    getColors()\r\n  }, [])\r\n\r\n\r\n\r\n  const onInfoUpdate = (e) => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    let newInfo = {}\r\n    if (name === \"title-info\"){\r\n      newInfo = { id: info.id, title: value, description: info.description }\r\n    } else if (name === \"description-info\") {\r\n      newInfo = { id: info.id, title: info.title, description: value }\r\n    } else {\r\n      newInfo = info\r\n    }\r\n    setInfo(newInfo)\r\n    patchColors(newInfo, colors)\r\n  }\r\n\r\n\r\n  const deleteColor = async (id) => {\r\n    const newColors = colors.filter((color) => color.id !== id)\r\n    \r\n    setColors(newColors)\r\n    setActiveColorSelector(null)\r\n    \r\n    patchColors(info, newColors)\r\n  }\r\n\r\n  const addColor = async (selectedColor) => {\r\n    const newColor = { id: UUID(), hex: selectedColor.hex, order: 0 }\r\n    const newColors = [newColor, ...colors]\r\n    \r\n    setColors(newColors)\r\n    setActiveColorSelector(null)\r\n    patchColors(info, newColors)\r\n  }\r\n  \r\n  const updateColor = (id, selectedColor) => {\r\n    const newColors = colors.map((color) => color.id !== id ? color : { id: color.id, hex: selectedColor.hex, order: color.order }) \r\n    setColors(newColors)\r\n    setActiveColorSelector(null)\r\n    patchColors(info, newColors)\r\n  }\r\n\r\n  const cloneColor = (originalId) => {\r\n    const originalIndex = colors.findIndex((color) => color.id === originalId)\r\n    \r\n    const cloneId = UUID()\r\n    const cloneHex = colors[originalIndex].hex;\r\n    const newColor = { id: cloneId, hex: cloneHex};\r\n    let newColors = (\r\n    [\r\n      ...colors.slice(0, originalIndex),\r\n      newColor,\r\n      ...colors.slice(originalIndex)\r\n    ]);\r\n\r\n    setColors(newColors)\r\n\r\n    patchColors(info, newColors)\r\n  }\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const items = Array.from(colors);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n    \r\n    setColors(items)\r\n    patchColors(info, items)\r\n  }\r\n\r\n\r\n  return (\r\n      <div>\r\n          <Header info={info} onSave={onInfoUpdate} />\r\n          <AddBox activeColorSelector={activeColorSelector} setActiveColorSelector={setActiveColorSelector} saveColor={addColor}/>\r\n          { colors.length > 0 ? \r\n          <Colors colors={colors} activeColorSelector={activeColorSelector} setActiveColorSelector={setActiveColorSelector} onDelete={deleteColor} onUpdate={updateColor} onClone={cloneColor} handleOnDragEnd={handleOnDragEnd} /> :\r\n          <div className=\"no-colors color-box-wrapper\"><div><center>No colors to show<br></br>Press + to get started</center></div></div>\r\n          }\r\n      </div>  )\r\n}\r\n\r\nexport default Palette\r\n","import { FaTrash, FaClone, FaGripLines } from 'react-icons/fa'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport ColorRectangle from '../../../components/ColorRectangle'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Palettes({ palettes, onDelete, onClone, handleOnDragEnd }) {\r\n\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}> \r\n            <Droppable droppableId=\"list\">\r\n                {(provided) => (\r\n                    <div className=\"list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {palettes.map((palette, index) => (\r\n                            <Draggable key={palette.id} draggableId={palette.id} index={index} >\r\n                                {(provided) => (\r\n                                    <div className=\"draggable\" ref={provided.innerRef} {...provided.draggableProps} >\r\n                                        <div className=\"box-wrapper card\" >\r\n                                            <div className=\"color-header\">\r\n                                                <div className=\"color-box-icons left-icons\" > \r\n                                                    <div className=\"small-icon-btn icon\" {...provided.dragHandleProps}>         \r\n                                                        <FaGripLines />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"color-box-icons right-icons\">\r\n                                                    <FaClone className=\"small-icon-btn icon clickable-icon\" onClick={() => {onClone(palette.id)}} />\r\n                                                    <FaTrash className=\"small-icon-btn icon clickable-icon delete-icon\" onClick={() => {onDelete(palette.id)}}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Link to={`/palette-collection/palettes/${palette.id}`}>\r\n                                                <div className=\"color-box-wrapper\">\r\n                                                    <h3>{palette.title ? palette.title : \"Untitled\"}</h3>\r\n                                                    <div style={{ marginTop: \"0.5rem\" }}>\r\n                                                    { palette.colors &&\r\n                                                    palette.colors.map((color, index) => (\r\n                                                        <ColorRectangle key={index} color={color} />\r\n                                                    )) }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default Palettes\r\n","function reduce([numerator,denominator]){\r\n  let gcd = function gcd(a,b){\r\n    return b ? gcd(b, a%b) : a;\r\n  };\r\n  gcd = gcd(numerator,denominator);\r\n  return [numerator/gcd, denominator/gcd];\r\n}\r\n\r\nconst SaveItemOrder = ({ items, updatedIndex }) => {\r\n    const leftOrder = ((updatedIndex-1) > -1) ? (items[updatedIndex-1].sort_order) : [0, 1]\r\n    const rightOrder = ((updatedIndex+1) < items.length) ? (items[updatedIndex+1].sort_order) : [1, 0]\r\n    \r\n    //console.log('left', leftOrder)\r\n    //console.log('right', rightOrder)\r\n    items[updatedIndex].sort_order = reduce([leftOrder[0]+rightOrder[0], leftOrder[1]+rightOrder[1]])\r\n    return items\r\n}\r\n\r\nexport default SaveItemOrder","import { FaPlus } from 'react-icons/fa'\r\n\r\nconst AddBox = ({ newPaletteId, onCreate }) => {\r\n    return (\r\n        <div className=\"add-box\">\r\n            \r\n            <div className=\"color-box-wrapper card\">\r\n                <div className=\"color-header\">\r\n                    <div className=\"color-box-icons left-icons\">          \r\n                    </div>\r\n                    <div className=\"color-box-icons right-icons\">\r\n                        <FaPlus className=\"small-icon-btn icon clickable-icon\" onClick={()=>onCreate(newPaletteId)}/> \r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBox\r\n","const fetchPalettes = async () => {\r\n\r\n    const data = []\r\n\r\n    const keys = Object.keys(localStorage)\r\n    keys.forEach((key) => {\r\n        const value = JSON.parse(localStorage.getItem(key))\r\n        data.push(value)\r\n    })\r\n\r\n    return data\r\n}\r\n\r\nconst putPalette = (newPalette) => {\r\n    localStorage.setItem(newPalette.id, JSON.stringify(newPalette))\r\n}\r\n\r\nconst deletePalette = (deletePalette) => {\r\n    localStorage.removeItem(deletePalette.id)\r\n}\r\n\r\nconst patchPalette = (updatedPalette) => {\r\n    localStorage.setItem(updatedPalette.id, JSON.stringify(updatedPalette))\r\n}\r\n\r\n  \r\nexport { fetchPalettes, putPalette, deletePalette, patchPalette }","\r\nconst url = `http://localhost:5000/palettes`\r\n\r\nconst fetchPalettes = async () => {\r\n    const res = await fetch(`${url}`)\r\n    const data = await res.json()\r\n    return data\r\n}\r\n\r\nconst putPalette = (newPalette) => {\r\n    fetch(`${url}`, {\r\n        method: \"PUT\", \r\n        headers: {\r\n        'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newPalette)\r\n    })\r\n}\r\n\r\nconst deletePalette = (deletePalette) => {\r\n\r\n    fetch(url, {\r\n        method: \"DELETE\", \r\n        headers: {\r\n        'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(deletePalette)\r\n    })\r\n}\r\n\r\nconst patchPalette = (updatedPalette) => {\r\n\r\n    fetch(url, {\r\n        method: \"PATCH\", \r\n        headers: {\r\n        'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updatedPalette)\r\n    })\r\n}\r\n\r\n  \r\nexport { fetchPalettes, putPalette, deletePalette, patchPalette }","import Header from './scenes/Header'\r\nimport Palettes from './scenes/Palettes'\r\nimport saveItemOrder from '../../services/SaveItemOrder'\r\nimport AddBox from './scenes/AddBox'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { v4 as UUID } from 'uuid'\r\nimport { fetchPalettes as fetchPalettesLocal, putPalette as putPaletteLocal, deletePalette as deletePaletteLocal, patchPalette as patchPaletteLocal } from './services/StoreLocal'\r\nimport { fetchPalettes as fetchPalettesHTTP, putPalette as putPaletteHTTP, deletePalette as deletePaletteHTTP, patchPalette as patchPaletteHTTP } from './services/RequestHTTP'\r\n\r\nconst PaletteCollection = ({ history, databaseEnabled }) => {\r\n\r\n  let fetchPalettes = fetchPalettesLocal\r\n  let putPalette = putPaletteLocal\r\n  let deletePalette = deletePaletteLocal\r\n  let patchPalette = patchPaletteLocal\r\n\r\n  if (databaseEnabled) { \r\n    fetchPalettes = fetchPalettesHTTP\r\n    putPalette = putPaletteHTTP\r\n    deletePalette = deletePaletteHTTP\r\n    patchPalette = patchPaletteHTTP\r\n  } \r\n  \r\n  const [palettes, setPalettes] = useState([])\r\n  \r\n  const newPaletteId = UUID()\r\n  \r\n  useEffect(() => {\r\n\r\n    const getPalettes = async () => {\r\n      const paletteData = await fetchPalettes()\r\n      //console.log(paletteData)\r\n      paletteData.sort((a, b) => (a.sort_order[0]/a.sort_order[1] - b.sort_order[0]/b.sort_order[1]))\r\n      setPalettes(paletteData)\r\n    }\r\n    getPalettes()\r\n  }, [])\r\n  \r\n\r\n    const onCreateNewPalette = async() => {\r\n      const newPaletteId = UUID()\r\n      const newPaletteTitle = \"\"\r\n      const newPaletteDescription = \"\"\r\n      const newColors = []\r\n      const newSortOrder = []\r\n\r\n      const newPalette = { id: newPaletteId, title: newPaletteTitle, description: newPaletteDescription, colors: newColors, sort_order: newSortOrder }\r\n      const newPalettes = saveItemOrder({ items: [newPalette, ...palettes], updatedIndex: 0 })\r\n      setPalettes(newPalettes)\r\n      await putPalette(newPalette)\r\n\r\n      return history.push(`/palette-collection/palettes/${newPaletteId}`)\r\n    }\r\n    \r\n    const clonePalette = (originalId) => {\r\n      const originalIndex = palettes.findIndex((palette) => palette.id === originalId)\r\n      \r\n      const cloneId = UUID()\r\n      const cloneTitle = `Copy of ${palettes[originalIndex].title}`\r\n      const cloneDescription = palettes[originalIndex].description\r\n      const cloneColors  = palettes[originalIndex].colors\r\n      const cloneSortOrder = []\r\n\r\n      const newPalette = { id: cloneId, title: cloneTitle, description: cloneDescription, colors: cloneColors, sort_order: cloneSortOrder }\r\n      let newPalettes = (\r\n      [\r\n        ...palettes.slice(0, originalIndex),\r\n        newPalette,\r\n        ...palettes.slice(originalIndex)\r\n      ]);\r\n      \r\n      newPalettes = saveItemOrder({ items: newPalettes, updatedIndex: newPalettes.findIndex((palette) => (palette.id === cloneId)) })\r\n      \r\n      setPalettes(newPalettes)\r\n  \r\n      putPalette(newPalette)\r\n    }\r\n\r\n    const onDeletePalette = async (id) => {\r\n      const paletteToDelete = palettes.find((palette) => palette.id === id)\r\n      const newPalettes = palettes.filter((palette) => palette.id !== id)\r\n      setPalettes(newPalettes)\r\n      await deletePalette(paletteToDelete)\r\n    }\r\n\r\n    const handleOnDragEnd = (result) => {\r\n      if (!result.destination) return;\r\n      const items = Array.from(palettes);\r\n      const [reorderedItem] = items.splice(result.source.index, 1);\r\n      items.splice(result.destination.index, 0, reorderedItem);\r\n  \r\n      const newPalettes = saveItemOrder({ items: items, updatedIndex: result.destination.index })\r\n      setPalettes(newPalettes)\r\n      console.log(newPalettes[result.destination.index])\r\n      patchPalette(newPalettes[result.destination.index])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { /* <Header /> */ }\r\n            <AddBox newPaletteId={newPaletteId} onCreate={onCreateNewPalette} />\r\n            { palettes.length > 0 ? \r\n            <Palettes palettes={palettes} handleOnDragEnd={handleOnDragEnd} onClone={clonePalette} onDelete={onDeletePalette} /> :\r\n            <div className=\"no-colors color-box-wrapper\"><div><center>No color schemes to show<br></br>Press + to get started</center></div></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(PaletteCollection)\r\n","import Palette from './scenes/Palette'\nimport PaletteCollection from './scenes/PaletteCollection'\n//import ROUTES, { RenderRoutes } from \"./routes\";\nimport { Route, Switch, useParams } from 'react-router-dom'\n\nfunction App() {\n\n  const databaseEnabled = false \n\n  return (\n    <div className=\"App card\">\n      <Switch>\n          <Route path=\"/palette-collection\" exact >\n            <PaletteCollection databaseEnabled={databaseEnabled}/> \n          </Route>\n          \n          <Route path=\"/palette-collection/palettes/:id\" children={<Child databaseEnabled={databaseEnabled} />}/>\n            {/* <ColorScheme colorSchemeId={activeColorSchemeId}/>  */}\n\n        </Switch>\n      \n      {/* <RenderRoutes routes={ROUTES} /> */}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Child({ databaseEnabled }) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <Palette paletteId={id} databaseEnabled={databaseEnabled} />\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('palette-collection')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}